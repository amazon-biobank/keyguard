if [ $1 = "remote" ] 
then 
  echo "Deploying keyguard server"
  CONNECTION_PROFILE="./../biobank/blockchain/test-network/organizations/peerOrganizations/org1.example.com/connection-org1.json"
  CONTEXT="remote"

  # generate and copy keyguard Certificates
  cd ../biobank/application/fabric-details/
  node registerUser.js client remote
  node registerUser.js keyguard remote
  mv wallet/client.id ./../../../keyguard/wallet
  mv wallet/keyguard.id  ./../../../keyguard/wallet
  cd -

  # Parse certificates and copy CA certificate
  cd wallet
  ./parse-certificates.sh
  cd ..
  cp ./../biobank/blockchain/test-network/organizations/fabric-ca/org1/ca-cert.pem ./wallet/ca.crt
  
  # copy connection profile
  cp ./../biobank/blockchain/test-network/organizations/peerOrganizations/org1.example.com/connection-org1.json ./blockchain/fabric-details/connection.json
  
  # Start Application
  node index.js &
fi

if [ $1 = "microfabric" ] 
then 
  echo "Deploying local keyguard"

  # those ID must be generated by IBM Blockchain Extension
  cp ~/.fabric-vscode/environments/testNetwork/wallets/Org1/client.id ./wallet/client.id
  cp ~/.fabric-vscode/environments/testNetwork/wallets/Org1/keyguard.id ./wallet/keyguard.id
  cp "$HOME/.fabric-vscode/environments/testNetwork/wallets/Org1/Org1 CA Admin.id" './wallet/Org1 CA Admin.id'
  
  # parse certificates
  cd wallet
  ./parse-certificates.sh
  node parser.js 'Org1 CA Admin.id' ca.crt certificate
  cd ..

  # start Application
  node index.js &
fi

